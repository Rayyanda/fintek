function store penundaan
$sks = Auth::user()->student->jenis_kelas == 'Pagi' ? 150000 * 20 : 175000 * 20;

        $cicilanController = App::make(CicilanController::class);

        $tagihan = Tagihan::where('tahun_ajaran','=',$request->tahun_ajaran)
            ->where('semester','=',$request->semester)
            ->where('jenis_tagihan','=',"SKS")
            ->where('student_id','=',Auth::user()->student->student_id)
            ->first();


            //jika belum ada tagihan sks, periksa opsi penundaan
            if($request->opsi == 1)
            {
                //membuat uuid tagihan sks
                $uuidSks = Str::uuid();

                //membuat tagihan sks
                if($tagihan === null){
                    $tagihan = Tagihan::create([
                        'student_id'=>Auth::user()->student->student_id,
                        'tagihan_id'=> $uuidSks,
                        'tahun_ajaran'=> $request->tahun_ajaran,
                        'semester'=> $request->semester,
                        'nominal'=>$sks,
                        'jenis_tagihan'=> "SKS",
                        'status'=> 'Penundaan'
                    ]);
                }

                //opsi penundaan 1 :  (BPP + SKS (20) + Tagihan Sebelumnya) / 5
                $total = $request->jumlah_tunggakan + $tagihan->nominal;
                $penundaan = Penundaan::create([
                    'opsi_penundaan'=>$request->opsi,
                    'jumlah_tunggakan'=> $total,
                    'jenis_tagihan'=> "BPP & SKS",
                    'alasan' => $request->alasan,
                    'tahun_ajaran'=> $request->tahun_ajaran,
                    'semester'=> $request->semester,
                    'status_id' => 1
                ]);

                //mengisi pivot tagihan di table penundaan tagihan
                DB::table('penundaan_tagihans')->insert([
                    [
                        'penundaan_id' => $penundaan->id,
                        'tagihan_id'=>$request->tagihan_id,
                        'student_id'=>Auth::user()->student->student_id
                    ],
                    [
                        'penundaan_id' => $penundaan->id,
                        'tagihan_id'=>$uuidSks,
                        'student_id'=>Auth::user()->student->student_id
                    ],
                ]);


                //membuat cicilan dengan opsi
                $cicilanController->opsi1($penundaan->id,$request->jumlah_tunggakan,$sks);
            }else{
                //pada opsi 2 : SKS tidak dimasukkan kedalam total pencicilan, sehingga tagihan sks tetap dibuat namun tidak ada cicilan
                //membuat penundaan BPP saja
                $penundaan = Penundaan::create([
                    'opsi_penundaan'=>$request->opsi,
                    'jumlah_tunggakan'=>$request->jumlah_tunggakan,
                    'jenis_tagihan'=>$request->jenis_tagihan,
                    'alasan' => $request->alasan,
                    'tahun_ajaran'=> $request->tahun_ajaran,
                    'semester'=> $request->semester,
                    'status_id' => 1
                ]);

                //membuat pencicilan penundaan BPP
                $cicilanController->opsi2($penundaan->id,$penundaan->jumlah_tunggakan);

                //mengisi pivot tagihan di table penundaan_tagihan
                $penundaan->tagihans()->attach([$request->tagihan_id]);

                //membuat tagihan SKS
                $tagihanSks = Tagihan::create([
                    'student_id'=>Auth::user()->student->student_id,
                    'tagihan_id'=> Str::uuid(),
                    'tahun_ajaran'=> $request->tahun_ajaran,
                    'semester'=> $request->semester,
                    'nominal'=>$sks,
                    'jenis_tagihan'=> "SKS",
                ]);
                //note : tagihan SKS tidak dianggap sebagai penundaan


            }

        Tagihan::where('tagihan_id','=',$request->tagihan_id)->update([
            'status' => 'Penundaan'
        ]);
